// source: orderer/smartbft/configuration.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.orderer.smartbft.Options', null, global);
goog.exportSymbol('proto.orderer.smartbft.Options.Rotation', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.orderer.smartbft.Options = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.orderer.smartbft.Options, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.orderer.smartbft.Options.displayName = 'proto.orderer.smartbft.Options';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.orderer.smartbft.Options.prototype.toObject = function(opt_includeInstance) {
  return proto.orderer.smartbft.Options.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.orderer.smartbft.Options} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderer.smartbft.Options.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestBatchMaxCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    requestBatchMaxBytes: jspb.Message.getFieldWithDefault(msg, 2, 0),
    requestBatchMaxInterval: jspb.Message.getFieldWithDefault(msg, 3, ""),
    incomingMessageBufferSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    requestPoolSize: jspb.Message.getFieldWithDefault(msg, 5, 0),
    requestForwardTimeout: jspb.Message.getFieldWithDefault(msg, 6, ""),
    requestComplainTimeout: jspb.Message.getFieldWithDefault(msg, 7, ""),
    requestAutoRemoveTimeout: jspb.Message.getFieldWithDefault(msg, 8, ""),
    requestMaxBytes: jspb.Message.getFieldWithDefault(msg, 9, 0),
    viewChangeResendInterval: jspb.Message.getFieldWithDefault(msg, 10, ""),
    viewChangeTimeout: jspb.Message.getFieldWithDefault(msg, 11, ""),
    leaderHeartbeatTimeout: jspb.Message.getFieldWithDefault(msg, 12, ""),
    leaderHeartbeatCount: jspb.Message.getFieldWithDefault(msg, 13, 0),
    collectTimeout: jspb.Message.getFieldWithDefault(msg, 14, ""),
    syncOnStart: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    speedUpViewChange: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    leaderRotation: jspb.Message.getFieldWithDefault(msg, 17, 0),
    decisionsPerLeader: jspb.Message.getFieldWithDefault(msg, 18, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.orderer.smartbft.Options}
 */
proto.orderer.smartbft.Options.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.orderer.smartbft.Options;
  return proto.orderer.smartbft.Options.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.orderer.smartbft.Options} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.orderer.smartbft.Options}
 */
proto.orderer.smartbft.Options.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestBatchMaxCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestBatchMaxBytes(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestBatchMaxInterval(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIncomingMessageBufferSize(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestPoolSize(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestForwardTimeout(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestComplainTimeout(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestAutoRemoveTimeout(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestMaxBytes(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewChangeResendInterval(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewChangeTimeout(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setLeaderHeartbeatTimeout(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLeaderHeartbeatCount(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectTimeout(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSyncOnStart(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSpeedUpViewChange(value);
      break;
    case 17:
      var value = /** @type {!proto.orderer.smartbft.Options.Rotation} */ (reader.readEnum());
      msg.setLeaderRotation(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDecisionsPerLeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.orderer.smartbft.Options.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.orderer.smartbft.Options.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.orderer.smartbft.Options} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.orderer.smartbft.Options.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestBatchMaxCount();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getRequestBatchMaxBytes();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRequestBatchMaxInterval();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIncomingMessageBufferSize();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getRequestPoolSize();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getRequestForwardTimeout();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRequestComplainTimeout();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRequestAutoRemoveTimeout();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getRequestMaxBytes();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getViewChangeResendInterval();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getViewChangeTimeout();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getLeaderHeartbeatTimeout();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getLeaderHeartbeatCount();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getCollectTimeout();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getSyncOnStart();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getSpeedUpViewChange();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getLeaderRotation();
  if (f !== 0.0) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = message.getDecisionsPerLeader();
  if (f !== 0) {
    writer.writeUint64(
      18,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.orderer.smartbft.Options.Rotation = {
  ROTATION_UNSPECIFIED: 0,
  ROTATION_OFF: 1,
  ROTATION_ON: 2
};

/**
 * optional uint64 request_batch_max_count = 1;
 * @return {number}
 */
proto.orderer.smartbft.Options.prototype.getRequestBatchMaxCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderer.smartbft.Options} returns this
 */
proto.orderer.smartbft.Options.prototype.setRequestBatchMaxCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 request_batch_max_bytes = 2;
 * @return {number}
 */
proto.orderer.smartbft.Options.prototype.getRequestBatchMaxBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderer.smartbft.Options} returns this
 */
proto.orderer.smartbft.Options.prototype.setRequestBatchMaxBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string request_batch_max_interval = 3;
 * @return {string}
 */
proto.orderer.smartbft.Options.prototype.getRequestBatchMaxInterval = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderer.smartbft.Options} returns this
 */
proto.orderer.smartbft.Options.prototype.setRequestBatchMaxInterval = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 incoming_message_buffer_size = 4;
 * @return {number}
 */
proto.orderer.smartbft.Options.prototype.getIncomingMessageBufferSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderer.smartbft.Options} returns this
 */
proto.orderer.smartbft.Options.prototype.setIncomingMessageBufferSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 request_pool_size = 5;
 * @return {number}
 */
proto.orderer.smartbft.Options.prototype.getRequestPoolSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderer.smartbft.Options} returns this
 */
proto.orderer.smartbft.Options.prototype.setRequestPoolSize = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string request_forward_timeout = 6;
 * @return {string}
 */
proto.orderer.smartbft.Options.prototype.getRequestForwardTimeout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderer.smartbft.Options} returns this
 */
proto.orderer.smartbft.Options.prototype.setRequestForwardTimeout = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string request_complain_timeout = 7;
 * @return {string}
 */
proto.orderer.smartbft.Options.prototype.getRequestComplainTimeout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderer.smartbft.Options} returns this
 */
proto.orderer.smartbft.Options.prototype.setRequestComplainTimeout = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string request_auto_remove_timeout = 8;
 * @return {string}
 */
proto.orderer.smartbft.Options.prototype.getRequestAutoRemoveTimeout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderer.smartbft.Options} returns this
 */
proto.orderer.smartbft.Options.prototype.setRequestAutoRemoveTimeout = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional uint64 request_max_bytes = 9;
 * @return {number}
 */
proto.orderer.smartbft.Options.prototype.getRequestMaxBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderer.smartbft.Options} returns this
 */
proto.orderer.smartbft.Options.prototype.setRequestMaxBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string view_change_resend_interval = 10;
 * @return {string}
 */
proto.orderer.smartbft.Options.prototype.getViewChangeResendInterval = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderer.smartbft.Options} returns this
 */
proto.orderer.smartbft.Options.prototype.setViewChangeResendInterval = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string view_change_timeout = 11;
 * @return {string}
 */
proto.orderer.smartbft.Options.prototype.getViewChangeTimeout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderer.smartbft.Options} returns this
 */
proto.orderer.smartbft.Options.prototype.setViewChangeTimeout = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string leader_heartbeat_timeout = 12;
 * @return {string}
 */
proto.orderer.smartbft.Options.prototype.getLeaderHeartbeatTimeout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderer.smartbft.Options} returns this
 */
proto.orderer.smartbft.Options.prototype.setLeaderHeartbeatTimeout = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional uint64 leader_heartbeat_count = 13;
 * @return {number}
 */
proto.orderer.smartbft.Options.prototype.getLeaderHeartbeatCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderer.smartbft.Options} returns this
 */
proto.orderer.smartbft.Options.prototype.setLeaderHeartbeatCount = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional string collect_timeout = 14;
 * @return {string}
 */
proto.orderer.smartbft.Options.prototype.getCollectTimeout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.orderer.smartbft.Options} returns this
 */
proto.orderer.smartbft.Options.prototype.setCollectTimeout = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional bool sync_on_start = 15;
 * @return {boolean}
 */
proto.orderer.smartbft.Options.prototype.getSyncOnStart = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.orderer.smartbft.Options} returns this
 */
proto.orderer.smartbft.Options.prototype.setSyncOnStart = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool speed_up_view_change = 16;
 * @return {boolean}
 */
proto.orderer.smartbft.Options.prototype.getSpeedUpViewChange = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.orderer.smartbft.Options} returns this
 */
proto.orderer.smartbft.Options.prototype.setSpeedUpViewChange = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional Rotation leader_rotation = 17;
 * @return {!proto.orderer.smartbft.Options.Rotation}
 */
proto.orderer.smartbft.Options.prototype.getLeaderRotation = function() {
  return /** @type {!proto.orderer.smartbft.Options.Rotation} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {!proto.orderer.smartbft.Options.Rotation} value
 * @return {!proto.orderer.smartbft.Options} returns this
 */
proto.orderer.smartbft.Options.prototype.setLeaderRotation = function(value) {
  return jspb.Message.setProto3EnumField(this, 17, value);
};


/**
 * optional uint64 decisions_per_leader = 18;
 * @return {number}
 */
proto.orderer.smartbft.Options.prototype.getDecisionsPerLeader = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.orderer.smartbft.Options} returns this
 */
proto.orderer.smartbft.Options.prototype.setDecisionsPerLeader = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


goog.object.extend(exports, proto.orderer.smartbft);
