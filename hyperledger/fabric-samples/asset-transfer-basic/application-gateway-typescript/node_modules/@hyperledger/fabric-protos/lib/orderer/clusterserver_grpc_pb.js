// GENERATED CODE -- DO NOT EDIT!

// Original file comments:
// Copyright the Hyperledger Fabric contributors. All rights reserved.
//
// SPDX-License-Identifier: Apache-2.0
//
'use strict';
var grpc = require('@grpc/grpc-js');
var orderer_clusterserver_pb = require('../orderer/clusterserver_pb.js');
var common_common_pb = require('../common/common_pb.js');
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');

function serialize_orderer_ClusterNodeServiceStepRequest(arg) {
  if (!(arg instanceof orderer_clusterserver_pb.ClusterNodeServiceStepRequest)) {
    throw new Error('Expected argument of type orderer.ClusterNodeServiceStepRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_orderer_ClusterNodeServiceStepRequest(buffer_arg) {
  return orderer_clusterserver_pb.ClusterNodeServiceStepRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_orderer_ClusterNodeServiceStepResponse(arg) {
  if (!(arg instanceof orderer_clusterserver_pb.ClusterNodeServiceStepResponse)) {
    throw new Error('Expected argument of type orderer.ClusterNodeServiceStepResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_orderer_ClusterNodeServiceStepResponse(buffer_arg) {
  return orderer_clusterserver_pb.ClusterNodeServiceStepResponse.deserializeBinary(new Uint8Array(buffer_arg));
}


// Service ClusterNodeService defines communication between cluster members.
var ClusterNodeServiceService = exports.ClusterNodeServiceService = {
  // Step passes an implementation-specific message to another cluster member.
step: {
    path: '/orderer.ClusterNodeService/Step',
    requestStream: true,
    responseStream: true,
    requestType: orderer_clusterserver_pb.ClusterNodeServiceStepRequest,
    responseType: orderer_clusterserver_pb.ClusterNodeServiceStepResponse,
    requestSerialize: serialize_orderer_ClusterNodeServiceStepRequest,
    requestDeserialize: deserialize_orderer_ClusterNodeServiceStepRequest,
    responseSerialize: serialize_orderer_ClusterNodeServiceStepResponse,
    responseDeserialize: deserialize_orderer_ClusterNodeServiceStepResponse,
  },
};

exports.ClusterNodeServiceClient = grpc.makeGenericClientConstructor(ClusterNodeServiceService);
