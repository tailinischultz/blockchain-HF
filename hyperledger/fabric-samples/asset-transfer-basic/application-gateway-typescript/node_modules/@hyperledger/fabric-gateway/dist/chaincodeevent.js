"use strict";
/*
 * Copyright 2021 IBM All Rights Reserved.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.newChaincodeEvents = void 0;
// @ts-expect-error Polyfill for Symbol.dispose if not present
Symbol.dispose ??= Symbol('Symbol.dispose');
function newChaincodeEvents(responses) {
    return {
        [Symbol.asyncIterator]: async function* () {
            for await (const response of responses) {
                const blockNumber = BigInt(response.getBlockNumber());
                const events = response.getEventsList();
                for (const event of events) {
                    yield newChaincodeEvent(blockNumber, event);
                }
            }
        },
        close: () => {
            responses.close();
        },
        [Symbol.dispose]: () => {
            responses.close();
        },
    };
}
exports.newChaincodeEvents = newChaincodeEvents;
function newChaincodeEvent(blockNumber, event) {
    return {
        blockNumber,
        chaincodeName: event.getChaincodeId(),
        eventName: event.getEventName(),
        transactionId: event.getTxId(),
        payload: event.getPayload_asU8(),
    };
}
//# sourceMappingURL=chaincodeevent.js.map